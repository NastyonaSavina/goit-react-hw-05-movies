{"version":3,"file":"static/js/80.bc2b33e8.chunk.js","mappings":"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","sources":["components/MoviesList/MovieList.styled.jsx","components/MoviesList/MoviesList.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/SearchMoviePage/SearchMoviePage.jsx","servises/FetchMovies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List= styled.ul`\nlist-style-type: circle;\nmargin-left: 20px;\n\n`\n\nexport const MovieItem= styled.li`\n    color: black;\n    :hover {\n        color: #0920e7;}\n\n`\n\nexport const MovieLink=styled(Link)`\n    text-decoration: none;\n    color: black;\n    :hover {\n        color: #0920e7;}\n`\n\nexport const MovieName= styled.p`\n    padding: 5px;\n    margin-top: 0px;\n    margin-bottom: 0;\n`","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n\nimport {\n    List,\n    MovieItem,\n    MovieLink,\n    MovieName\n} from './MovieList.styled';\n\n\nexport function MoviesList({ movies }) {\n    const location = useLocation();\n  \n    return (\n        <>\n            <List>\n                {movies.map(movie => [\n                    <MovieItem key={movie.id}>\n                        <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                            <MovieName>{ movie.title}</MovieName>\n                        </MovieLink>\n       \n                    </MovieItem> \n                ])}\n                \n            </List>\n            \n            \n        </>\n        \n        )\n}\n    \n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};","import styled from 'styled-components';\n\n\n\nexport const SearchArea = styled.div`\n  \n    min-height: 50px;\n    padding-right: 24px;\n    padding-left: 24px;\n    padding-top: 12px;\n    color: #fff;\n    box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n        0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n    margin-bottom: 20px;\n`\n\nexport const SearchForm =styled.form`\n    display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n`\n\nexport const SearchFormInput= styled.input`\n    display: inline-block;\n    width: 100%;\n    height: 26px;\n    font: inherit;\n    font-size: 15px;\n    border: 2px solid rgba(0, 0, 0, 0.12);\n    border-radius: 5px;\n    outline: none;\n    padding-left: 10px;\n    padding-right: 4px;\n`\n\nexport const SearchFormBtn= styled.button`\n    min-width: 50px;\n    height: 32px;\n    background-color: rgba(0, 0, 0, 0.12);\n    cursor: pointer;\n    font-size: 15px;\n\n    font-weight: 500;\n    border-radius: 5px;\n    border: 1px solid #eee;\n    padding: 0 10px;\n    \n    :hover {\n    background-color: #dbbaba;\n}\n`\n","import PropTypes from 'prop-types';\n\n\nimport { useState } from 'react';\nimport {\n    SearchArea,\n    SearchForm,\n    SearchFormInput,\n    SearchFormBtn\n\n} from './Searchbar.styled';\n\n\n\nexport const Searchbar = ({ onSubmit }) => {\n    const [value, setValue] = useState('');\n\n    const handleChange = event => {\n        const { value } = event.target;\n        setValue(value);\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        onSubmit(value);\n    };\n\n   \n    \n    return (\n        <>\n            <SearchArea >\n                <SearchForm   onSubmit={handleSubmit}>\n                    <SearchFormInput\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search movie\"\n                    value={value}\n                    onChange={handleChange}\n                    />\n                    <SearchFormBtn type=\"submit\">Search </SearchFormBtn>\n                </SearchForm >\n\n            </SearchArea>         \n        </>\n       \n    )\n}\n\n\n\nSearchbar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n\n}","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\n\nimport { getMovieByQuery } from '../../servises/FetchMovies';\nimport { Searchbar } from '../../components/Searchbar/Searchbar';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\n\n\nconst SearchMoviePage = () => {\n    \n const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query' ?? '');\n  \n\n  useEffect(() => {\n\n      if (query === null) {\n    } else {\n      getMovieByQuery(query).then((data) => {\n        setMovies(data.results);\n        });\n    }\n    \n    \n  }, [query]);\n\n    const updateQueryString = movieName => {\n      setSearchParams(movieName !== '' ? { query: movieName } : {});\n     \n    };\n\n\n    return (\n    <>\n    <Searchbar onSubmit={updateQueryString} />\n\n        \n    {movies.length > 0 && (\n            <MoviesList movies={movies} />\n          )}      \n       \n    </>     \n    \n  );\n\n}\n\nexport default SearchMoviePage;","\nconst API_KEY = \"10612ebbbeaf2ad5999e09badf85e183\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nasync function fetchMovies(url = '', config = {}) {\n    const response = await fetch(url, config);\n    return response.ok\n        ? await response.json()\n        : Promise.reject(new Error('Not found'));\n}\n\n\nexport function getMovieTrending() {\n  return fetchMovies(`${BASE_URL}trending/movie/day?api_key=${API_KEY}`);\n}\n\n\nexport function getSingleMovieDetails(movieId) {\n  return fetchMovies(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n\n  \n}\n\nexport function getCastMovie(movieId) {\n  return fetchMovies(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n}\n\nexport function getMovieReviews(movieId) {\n  return fetchMovies(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n}\n\n\nexport function getMovieByQuery(query) {\n  \n    return fetchMovies(`${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`)\n\n  \n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["List","styled","MovieItem","MovieLink","Link","MovieName","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","SearchArea","SearchForm","SearchFormInput","SearchFormBtn","Searchbar","onSubmit","useState","value","setValue","event","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","target","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getMovieByQuery","then","data","results","movieName","length","API_KEY","BASE_URL","fetchMovies","url","config","fetch","response","ok","json","Promise","reject","Error","getMovieTrending","getSingleMovieDetails","movieId","getCastMovie","getMovieReviews","asyncGeneratorStep","gen","resolve","_next","_throw","key","arg","info","error","done","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}